/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package carrental;
import java.awt.Image;
import java.util.*;
import java.util.concurrent.TimeUnit;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import org.hibernate.HibernateException; 
import org.hibernate.Query;
import org.hibernate.Session; 
import org.hibernate.Transaction;
import org.hibernate.SessionFactory;
import org.hibernate.cfg.Configuration;

/**
 *
 * @author Syeda Urooj Fatima
 */
public class login extends javax.swing.JFrame {
    private static SessionFactory factory; 
    /**
     * Creates new form login
     */
    public login() {
        initComponents();
        this.setLocationRelativeTo(null);
        
        try {
            factory = new Configuration().configure().buildSessionFactory();
        } catch (Throwable ex) { 
            System.err.println("Failed to create sessionFactory object." + ex);
            throw new ExceptionInInitializerError(ex); 
        }
        
        updateFine();
        updateBookings();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblCompany = new javax.swing.JLabel();
        lblLogin = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblStaffName = new javax.swing.JLabel();
        lblPassword = new javax.swing.JLabel();
        passPassword = new javax.swing.JPasswordField();
        txtName = new javax.swing.JTextField();
        btnLogin = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(52, 172, 224));

        lblCompany.setBackground(new java.awt.Color(52, 172, 224));
        lblCompany.setFont(new java.awt.Font("Monotype Corsiva", 1, 18)); // NOI18N
        lblCompany.setForeground(new java.awt.Color(255, 255, 255));
        lblCompany.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCompany.setText("CarGo");
        lblCompany.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblCompany, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(168, 168, 168))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblCompany, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
        );

        lblLogin.setBackground(new java.awt.Color(209, 216, 224));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Login");

        lblStaffName.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblStaffName.setText("Staff Name :");

        lblPassword.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblPassword.setText("Password :");

        btnLogin.setBackground(new java.awt.Color(52, 172, 224));
        btnLogin.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnLogin.setForeground(java.awt.Color.white);
        btnLogin.setText("Login");
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout lblLoginLayout = new javax.swing.GroupLayout(lblLogin);
        lblLogin.setLayout(lblLoginLayout);
        lblLoginLayout.setHorizontalGroup(
            lblLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(lblLoginLayout.createSequentialGroup()
                .addGap(95, 95, 95)
                .addGroup(lblLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblStaffName)
                    .addComponent(lblPassword))
                .addGap(25, 25, 25)
                .addGroup(lblLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtName, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE)
                    .addComponent(passPassword))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, lblLoginLayout.createSequentialGroup()
                .addContainerGap(171, Short.MAX_VALUE)
                .addGroup(lblLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, lblLoginLayout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(174, 174, 174))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, lblLoginLayout.createSequentialGroup()
                        .addComponent(btnLogin)
                        .addGap(158, 158, 158))))
        );
        lblLoginLayout.setVerticalGroup(
            lblLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(lblLoginLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addGroup(lblLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblStaffName)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(lblLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPassword)
                    .addComponent(passPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(58, 58, 58)
                .addComponent(btnLogin)
                .addContainerGap(51, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(lblLogin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblLogin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        // TODO add your handling code here:
        String name = txtName.getText();
        String password = String.valueOf(passPassword.getPassword());
        if ( name.trim().length() == 0 || password.trim().length() == 0 )
        {
            JFrame f = new JFrame();  
            JOptionPane.showMessageDialog(f,"Improper input format","Error",JOptionPane.WARNING_MESSAGE);
        }

        else
        {
            Session session = factory.openSession();
            Transaction tx = null;
            boolean present=false;
            try {
                tx = session.beginTransaction();
                //List employees = session.createQuery("FROM carrental.Staff").list();String hql = "FROM Employee E WHERE E.id = :employee_id";
                String hql = "FROM carrental.Staff AS S WHERE S.staffname = :name AND S.password = :password";
                Query query = session.createQuery(hql);
                query.setParameter("name",name);
                query.setParameter("password",password);
                List results = query.list();

                if (!results.isEmpty())
                {
                    present=true;
                    staffMenu sM = new staffMenu(name);
                    sM.setVisible(true);
                    sM.pack();
                    sM.setLocationRelativeTo(null);
                    sM.setDefaultCloseOperation(EXIT_ON_CLOSE);
                    this.dispose();
                }
                /*for (Iterator iterator = results.iterator(); iterator.hasNext();){
                    Staff employee = (Staff) iterator.next();
                    System.out.print("Staff Name: " + employee.getStaffname());
                    System.out.print("  Name: " + employee.getName());
                    System.out.print("  Contact no.: "+employee.getContactNo());
                    System.out.println("  Email: " + employee.getEmail());

                    if(employee.getStaffname().equals(name))
                    {
                        present=true;
                        staffMenu cD = new staffMenu();
                        cD.setVisible(true);
                        cD.pack();
                        cD.setLocationRelativeTo(null);
                        cD.setDefaultCloseOperation(EXIT_ON_CLOSE);
                        this.dispose();
                    }
                }*/

                if(present==false)
                {
                    JFrame f = new JFrame();  
                    JOptionPane.showMessageDialog(f,"Incorrect Credentials","Login Error",JOptionPane.WARNING_MESSAGE);
                }

                tx.commit();
            } catch (HibernateException e) {
                if (tx!=null) tx.rollback();
                e.printStackTrace();
            } finally {
                session.close();
            }
        }
    }//GEN-LAST:event_btnLoginActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new login().setVisible(true);
            }
        });
        try {
            factory = new Configuration().configure().buildSessionFactory();
        } 
        catch (Throwable ex) { 
            System.err.println("Failed to create sessionFactory object." + ex);
            throw new ExceptionInInitializerError(ex); 
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLogin;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblCompany;
    private javax.swing.JPanel lblLogin;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblStaffName;
    private javax.swing.JPasswordField passPassword;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables

    public static void listStaff()
    {
        Session session = factory.openSession();
        Transaction tx = null;
      
        try {
            tx = session.beginTransaction();
            List employees = session.createQuery("FROM Staff").list(); 
            for (Iterator iterator = employees.iterator(); iterator.hasNext();)
            {
               Staff employee = (Staff) iterator.next(); 
               System.out.print("Staff Name: " + employee.getStaffname()); 
               System.out.print("  Name: " + employee.getName()); 
               System.out.print("  Contact no.: "+employee.getContactNo());
               System.out.println("  Email: " + employee.getEmail()); 
            }
            tx.commit();
         } catch (HibernateException e) {
            if (tx!=null) tx.rollback();
            e.printStackTrace(); 
         } finally {
            session.close(); 
         }
    }
    
    public static void updateFine()
    {
        Session session = factory.openSession();
        Transaction tx = null;
        try {
            tx = session.beginTransaction();
            //List employees = session.createQuery("FROM carrental.Staff").list();String hql = "FROM Employee E WHERE E.id = :employee_id";
            String hql = "FROM Customerbookings cb WHERE cb.status = :status";
            Query query = session.createQuery(hql);
            query.setParameter("status","Due");
            List results = query.list();

            for (Iterator iterator = results.iterator(); iterator.hasNext();){
                Customerbookings cb = (Customerbookings) iterator.next();
                Date date = cb.getBookingDate();
                Date date_now = new Date(); 
                long diff = date_now.getTime() - (date.getTime()+(cb.getTimePeriod()-1)*24*60*60*1000);
                int days = (int)TimeUnit.DAYS.convert(diff, TimeUnit.MILLISECONDS);
                Customers c = (Customers)session.get(Customers.class, cb.getCustomers().getId()); 
                c.setFine(days*500);
                session.update(c);
            }

            tx.commit();
        } catch (HibernateException e) {
            if (tx!=null) tx.rollback();
            e.printStackTrace();
        } finally {
            session.close();
        }
    }
    
    public static void updateBookings()
    {
        Session session = factory.openSession();
        Transaction tx = null;
        try {
            tx = session.beginTransaction();
            String hql = "FROM Customerbookings cb WHERE cb.status = :status";
            Query query = session.createQuery(hql);
            query.setParameter("status","Ongoing");
            List results = query.list();

            for (Iterator iterator = results.iterator(); iterator.hasNext();){
                Customerbookings cb = (Customerbookings) iterator.next();
                Date date = cb.getBookingDate();
                Date date_now = new Date(); 
                long diff = date_now.getTime() - (date.getTime()+(cb.getTimePeriod()*24*60*60*1000));
                int days = (int)TimeUnit.DAYS.convert(diff, TimeUnit.MILLISECONDS);
                if(days==0)
                {
                    Customerbookings c = (Customerbookings)session.get(Customerbookings.class, cb.getBookingId()); 
                    c.setStatus("Completed");
                    session.update(c);
                    Cars car = (Cars)session.get(Cars.class, cb.getCars().getRegistrationNo()); 
                    car.setAvailability("Available");
                    session.update(car);
                }
            }

            tx.commit();
        } catch (HibernateException e) {
            if (tx!=null) tx.rollback();
            e.printStackTrace();
        } finally {
            session.close();
        }
    }
}
